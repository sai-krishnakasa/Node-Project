<%- include('partials/header') %>
    <title>Blog Page</title>
    <style>
        .container {
            width: 70%;
            margin: 0 auto;
            padding: 20px;
            height: 100vh;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;

        }

        .comment-container {
            width: 70%;
            margin: 0 auto;
            padding: 20px;
            height: 70vh;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            justify-content: flex-start;

        }

        .comment-container h3 {
            font-size: 20px;
            margin-bottom: 10px;
        }

        .comment-container form {
            margin-top: 20px;
        }

        .comment-container textarea {
            width: 100%;
            height: 100px;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            resize: vertical;
            margin-bottom: 10px;
        }

        .comment-container button {
            padding: 8px 15px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .comment-container button:hover {
            background-color: #45a049;
        }


        /* nav {
            display: flex;
            justify-content: space-between;
            align-items: flex-end;
            margin-bottom: 40px;
        } */

        .blog-image {
            padding-top: 50%;
            width: 900px;
            height: 400px;
            margin-bottom: 20px;
        }

        .blog-title {
            font-size: 24px;
            font-weight: bold;
            text-align: center;
            margin-bottom: 10px;
        }

        .blog-category {
            font-size: 18px;
            text-align: center;
            margin-bottom: 10px;
        }

        .blog-description {
            font-size: 16px;
            text-align: justify;
            line-height: 1.5;
        }

        #main-content {
            display: flex;
            margin-top: 25%;
            width: 10vw;
            height: 10vh;
            background: white;
            align-items: center;
            justify-content: center;
            text-align: center;
        }

        svg {
            cursor: pointer;
            overflow: visible;
            width: 60px;

            #heart {
                transform-origin: center;
                animation: animateHeartOut .3s linear forwards;
            }

            #main-circ {
                transform-origin: 29.5px 29.5px;
            }
        }

        #checkbox {
            display: none;
        }

        #checkbox:checked+label svg {
            #heart {
                transform: scale(.2);
                fill: #E2264D;
                animation: animateHeart .3s linear forwards .25s;
            }

            #main-circ {
                transition: all 2s;
                animation: animateCircle .3s linear forwards;
                opacity: 1;
            }

            #grp1 {
                opacity: 1;
                transition: .1s all .3s;

                #oval1 {
                    transform: scale(0) translate(0, -30px);
                    transform-origin: 0 0 0;
                    transition: .5s transform .3s;
                }

                #oval2 {
                    transform: scale(0) translate(10px, -50px);
                    transform-origin: 0 0 0;
                    transition: 1.5s transform .3s;
                }
            }

            #grp2 {
                opacity: 1;
                transition: .1s all .3s;

                #oval1 {
                    transform: scale(0) translate(30px, -15px);
                    transform-origin: 0 0 0;
                    transition: .5s transform .3s;
                }

                #oval2 {
                    transform: scale(0) translate(60px, -15px);
                    transform-origin: 0 0 0;
                    transition: 1.5s transform .3s;
                }
            }

            #grp3 {
                opacity: 1;
                transition: .1s all .3s;

                #oval1 {
                    transform: scale(0) translate(30px, 0px);
                    transform-origin: 0 0 0;
                    transition: .5s transform .3s;
                }

                #oval2 {
                    transform: scale(0) translate(60px, 10px);
                    transform-origin: 0 0 0;
                    transition: 1.5s transform .3s;
                }
            }

            #grp4 {
                opacity: 1;
                transition: .1s all .3s;

                #oval1 {
                    transform: scale(0) translate(30px, 15px);
                    transform-origin: 0 0 0;
                    transition: .5s transform .3s;
                }

                #oval2 {
                    transform: scale(0) translate(40px, 50px);
                    transform-origin: 0 0 0;
                    transition: 1.5s transform .3s;
                }
            }

            #grp5 {
                opacity: 1;
                transition: .1s all .3s;

                #oval1 {
                    transform: scale(0) translate(-10px, 20px);
                    transform-origin: 0 0 0;
                    transition: .5s transform .3s;
                }

                #oval2 {
                    transform: scale(0) translate(-60px, 30px);
                    transform-origin: 0 0 0;
                    transition: 1.5s transform .3s;
                }
            }

            #grp6 {
                opacity: 1;
                transition: .1s all .3s;

                #oval1 {
                    transform: scale(0) translate(-30px, 0px);
                    transform-origin: 0 0 0;
                    transition: .5s transform .3s;
                }

                #oval2 {
                    transform: scale(0) translate(-60px, -5px);
                    transform-origin: 0 0 0;
                    transition: 1.5s transform .3s;
                }
            }

            #grp7 {
                opacity: 1;
                transition: .1s all .3s;

                #oval1 {
                    transform: scale(0) translate(-30px, -15px);
                    transform-origin: 0 0 0;
                    transition: .5s transform .3s;
                }

                #oval2 {
                    transform: scale(0) translate(-55px, -30px);
                    transform-origin: 0 0 0;
                    transition: 1.5s transform .3s;
                }
            }

            #grp2 {
                opacity: 1;
                transition: .1s opacity .3s;
            }

            #grp3 {
                opacity: 1;
                transition: .1s opacity .3s;
            }

            #grp4 {
                opacity: 1;
                transition: .1s opacity .3s;
            }

            #grp5 {
                opacity: 1;
                transition: .1s opacity .3s;
            }

            #grp6 {
                opacity: 1;
                transition: .1s opacity .3s;
            }

            #grp7 {
                opacity: 1;
                transition: .1s opacity .3s;
            }
        }

        @keyframes animateCircle {
            40% {
                transform: scale(10);
                opacity: 1;
                fill: #DD4688;
            }

            55% {
                transform: scale(11);
                opacity: 1;
                fill: #D46ABF;
            }

            65% {
                transform: scale(12);
                opacity: 1;
                fill: #CC8EF5;
            }

            75% {
                transform: scale(13);
                opacity: 1;
                fill: transparent;
                stroke: #CC8EF5;
                stroke-width: .5;
            }

            85% {
                transform: scale(17);
                opacity: 1;
                fill: transparent;
                stroke: #CC8EF5;
                stroke-width: .2;
            }

            95% {
                transform: scale(18);
                opacity: 1;
                fill: transparent;
                stroke: #CC8EF5;
                stroke-width: .1;
            }

            100% {
                transform: scale(19);
                opacity: 1;
                fill: transparent;
                stroke: #CC8EF5;
                stroke-width: 0;
            }
        }

        @keyframes animateHeart {
            0% {
                transform: scale(.2);
            }

            40% {
                transform: scale(1.2);
            }

            100% {
                transform: scale(1);
            }
        }

        @keyframes animateHeartOut {
            0% {
                transform: scale(1.4);
            }

            100% {
                transform: scale(1);
            }
        }
    </style>


    <body>
        <div class="container">
            <% if(blog) {%>
                <img src="<%= blog.blog_image%>" alt="Blog Image" class="blog-image">
                <h2 class="blog-title">
                    <%= blog.title %>
                </h2>
                <p class="blog-category">
                    <%= blog.Category?.name%>
                </p>
                <p style="float: left;">Blog-description:</p>
                <p class="blog-description">
                    <% blog.description.split('\n').forEach(line=> { %>
                        <p>
                            <%= line %>
                        </p>
                        <% }) %>
                </p>
                <% }else{ %>
                    <h2>Oops! Blog Not Found!</h2>
                    <%}%>
        </div>

        <div class="container" style="padding-top:10%;padding-left:45%;">
            <div id="main-content">
                <a onclick="createLike()" style="cursor: pointer;">
                    <div>
                        <input type="checkbox" id="checkbox" />
                        <label for="checkbox">
                            <svg id="heart-svg" viewBox="467 392 58 57" xmlns="http://www.w3.org/2000/svg">
                                <g id="Group" fill="none" fill-rule="evenodd" transform="translate(467 392)">
                                    <path
                                        d="M29.144 20.773c-.063-.13-4.227-8.67-11.44-2.59C7.63 28.795 28.94 43.256 29.143 43.394c.204-.138 21.513-14.6 11.44-25.213-7.214-6.08-11.377 2.46-11.44 2.59z"
                                        id="heart" fill="<%= isLiked ? '#E2264D' : '#AAB8C2' %>" />
                                    <circle id="main-circ" fill="#E2264D" opacity="0" cx="29.5" cy="29.5" r="1.5" />

                                    <g id="grp7" opacity="0" transform="translate(7 6)">
                                        <circle id="oval1" fill="#9CD8C3" cx="2" cy="6" r="2" />
                                        <circle id="oval2" fill="#8CE8C3" cx="5" cy="2" r="2" />
                                    </g>

                                    <g id="grp6" opacity="0" transform="translate(0 28)">
                                        <circle id="oval1" fill="#CC8EF5" cx="2" cy="7" r="2" />
                                        <circle id="oval2" fill="#91D2FA" cx="3" cy="2" r="2" />
                                    </g>

                                    <g id="grp3" opacity="0" transform="translate(52 28)">
                                        <circle id="oval2" fill="#9CD8C3" cx="2" cy="7" r="2" />
                                        <circle id="oval1" fill="#8CE8C3" cx="4" cy="2" r="2" />
                                    </g>

                                    <g id="grp2" opacity="0" transform="translate(44 6)">
                                        <circle id="oval2" fill="#CC8EF5" cx="5" cy="6" r="2" />
                                        <circle id="oval1" fill="#CC8EF5" cx="2" cy="2" r="2" />
                                    </g>

                                    <g id="grp5" opacity="0" transform="translate(14 50)">
                                        <circle id="oval1" fill="#91D2FA" cx="6" cy="5" r="2" />
                                        <circle id="oval2" fill="#91D2FA" cx="2" cy="2" r="2" />
                                    </g>

                                    <g id="grp4" opacity="0" transform="translate(35 50)">
                                        <circle id="oval1" fill="#F48EA7" cx="6" cy="5" r="2" />
                                        <circle id="oval2" fill="#F48EA7" cx="2" cy="2" r="2" />
                                    </g>

                                    <g id="grp1" opacity="0" transform="translate(24)">
                                        <circle id="oval1" fill="#9FC7FA" cx="2.5" cy="3" r="2" />
                                        <circle id="oval2" fill="#9FC7FA" cx="7.5" cy="2" r="2" />
                                    </g>
                                </g>
                            </svg>
                        </label>
                        <h1 id="no_of_likes">
                            <%= no_of_likes%>
                        </h1>

                    </div>
                </a>
            </div>
        </div>
        <div class="comment-container">
            <h3>Comments:</h3>
            <% comments.forEach((comment, commentIndex)=> { %>
                <div>
                    <li class="reply-item">

                        <div class="reply-content">
                            <span class="username">
                                <%= comment.User.userName %> :

                            </span>
                            <span class="reply-text">
                                <%= comment.content %>
                            </span>
                            <button class="reply-button" data-index="<%= commentIndex %>">Reply</button>
                            <%if(comment.User?.id==user.id){%>
                                <button class="delete-button" data-reply-id="<%= comment.id %>">
                                    Delete
                                </button>
                                <%}%>
                        </div>
                    </li>

                    <% if (comment.replies && comment.replies.length> 0) { %>
                        <b>Replies:</b>
                        <ul>
                            <% comment.replies.forEach((reply, replyIndex)=> { %>
                                <li class="reply-item">
                                    <div class="reply-content">
                                        <span class="username">
                                            <%= reply.User?.userName %>:

                                        </span>
                                        <span class="reply-text">
                                            <%= reply.content %>
                                        </span>
                                        <% if (reply.User?.id==user.id) { %>
                                            <button class="delete-button" data-reply-id="<%= reply.id %>">
                                                Delete
                                            </button>
                                            <% } %>
                                    </div>
                                </li>
                                <% }) %>
                        </ul>
                        <% } %>

                            <form class="reply-form" id="reply-form-<%= commentIndex %>"
                                action="/replyComment/<%= comment.id %>" method="POST">
                                <textarea name="reply" placeholder="Write your reply here"
                                    style="display: none;"></textarea>
                                <button style="display: none;" type="submit">Submit</button>
                            </form>
                </div>
                <% }) %>

                    <button id="showCommentFormButton" class="reply-button" data-index="comment">Add Comment</button>

                    <form id="commentForm" style="display: none;" action="/createComment/<%= blog.id %>" method="POST">
                        <textarea name="comment" placeholder="Write your comment here"></textarea>
                        <button id="submitCommentButton" type="submit">Add Comment</button>
                    </form>
        </div>
        <script>
            const deleteButtons = document.querySelectorAll('.delete-button');

            // Add event listener to each delete button
            deleteButtons.forEach(button => {
                button.addEventListener('click', handleDelete);
            });

            function handleDelete(event) {
                event.preventDefault();

                const replyId = event.target.dataset.replyId;
                const deleteUrl = `/deleteComment/${replyId}`;

                fetch(deleteUrl)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            toastr.success(data.success);
                            setTimeout(() => {
                                location.reload();
                            }, 1000);
                        }
                    })
                    .catch(error => {
                        showToast('An error occurred while deleting the comment.');
                        console.error(error);
                    });
            }
            const replyButtons = document.querySelectorAll('.reply-button');
            const replyForms = document.querySelectorAll('.reply-form');
            const commentForm = document.getElementById('commentForm');
            const showCommentFormButton = document.getElementById('showCommentFormButton');
            const submitCommentButton = document.getElementById('submitCommentButton');

            replyButtons.forEach((button, index) => {
                button.addEventListener('click', (e) => {
                    e.preventDefault();
                    const dataIndex = button.getAttribute('data-index');
                    const targetReplyForm = document.getElementById(`reply-form-${dataIndex}`);
                    targetReplyForm.querySelector('textarea').style.display = 'block';
                    targetReplyForm.querySelector('button').style.display = 'block';
                });
            });

            Array.from(replyForms).forEach(replyForm => {
                replyForm.addEventListener('submit', async (e) => {
                    e.preventDefault();
                    const replyContent = replyForm.querySelector('textarea[name="reply"]').value.trim();
                    if (replyContent !== "") {
                        try {
                            const res = await fetch(replyForm.action, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({ comment: replyContent })
                            });
                            if (res.ok) {
                                console.log({ "success": "Replied Successfully" });
                                location.reload();
                            } else {
                                console.log("Error creating reply");
                            }
                        } catch (err) {
                            console.log("An Error Occurred while replying", err);
                        }
                    }
                });
            });

            document.getElementById('commentForm').addEventListener('submit', async (event) => {
                event.preventDefault();

                const form = event.target;
                const commentInput = form.elements.comment;
                const comment = commentInput.value.trim();

                if (comment !== '') {
                    try {
                        const res = await fetch(form.action, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ comment })
                        });

                        if (res.ok) {
                            console.log('Comment created successfully');
                            location.reload();
                        } else {
                            console.log('Error creating comment');
                        }
                    } catch (error) {
                        console.error('Error creating comment:', error);
                    }
                } else {
                    console.log('Comment cannot be empty');
                }
            });

            showCommentFormButton.addEventListener('click', (e) => {
                e.preventDefault();
                commentForm.style.display = 'block';
                showCommentFormButton.style.display = 'none';
            });

            async function createLike() {
                const res = await fetch('/createLike/<%= blog.id %>', {
                    method: 'POST'
                });

                if (res.ok) {
                    console.log('Like created successfully');
                    location.reload();
                } else {
                    console.error('Error creating like');
                }
            }
        </script>
        <%- include('partials/footer') %>